{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPR1H8xXXjTjMtQRr6cP390"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# In this notebook we will use our original logistic regressions to estimate win probability"],"metadata":{"id":"SMOXf7Mq_13R"}},{"cell_type":"markdown","source":["## Lets start with the optimized Knicks Logistic Regression Equation and edit it to accept new data"],"metadata":{"id":"Wd8A13gLAHQy"}},{"cell_type":"code","source":["pip install Cython"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D9qSGhSDlgBm","executionInfo":{"status":"ok","timestamp":1745871105230,"user_tz":240,"elapsed":11716,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"cc14fdcd-68c5-48cd-ac9d-4ef28fc70fa5"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: Cython in /usr/local/lib/python3.11/dist-packages (3.0.12)\n"]}]},{"cell_type":"code","source":["%load_ext Cython"],"metadata":{"id":"FNRqLvgglmJs","executionInfo":{"status":"ok","timestamp":1745871109357,"user_tz":240,"elapsed":4125,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["%%cython\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","import seaborn as sns\n","from sklearn.preprocessing import StandardScaler\n","#import statsmodels.api as sm\n","\n","import os\n","\n","from scipy.stats import pointbiserialr #For W/L correlation\n","from scipy.stats import pearsonr #For normal correlation\n","\n","import matplotlib.pyplot as plt\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.impute import SimpleImputer\n","\n","import time\n","def CorrOpPreds(Boxscore):\n","  \"\"\"\n","  Calculates the pointbiserial correlation between wins and various factors\n","  \"\"\"\n","  X = Boxscore.drop('score Rslt', axis=1)\n","  y = Boxscore['score Rslt']\n","  Cols = []\n","  BinCorr = []\n","  for column in X.columns:\n","      corr = pointbiserialr(y,X[column])[0]\n","      Cols.append(column)\n","      BinCorr.append(corr)\n","      #print(f\"Column: {column}, Corr: {corr}\")\n","  data = list(zip(Cols, BinCorr))\n","  CorrsDF = pd.DataFrame(data, columns = ['Col Name', 'Binary Corr']).sort_values(by='Binary Corr', key = abs, ascending = False).reset_index(drop=True)\n","  return CorrsDF\n","\n","\n","def Input_Opt_cython_CorrOpModel(Boxscore,inputs):\n","  \"\"\"\n","  Create a logit model based on uncorrelated predictor values\n","  \"\"\"\n","  X = Boxscore.drop('score Rslt', axis=1)\n","  y = Boxscore['score Rslt']\n","  correlation_matrix = X.corr()\n","  PBSCorr = CorrOpPreds(Boxscore)\n","\n","  count = 1\n","  Factors = [CorrOpPreds(Boxscore)['Col Name'][0]]\n","  while len(Factors) < 5:\n","    check = 0\n","    CorrCol = correlation_matrix[PBSCorr['Col Name'][count]]\n","    for factor in Factors:\n","      if CorrCol[factor] > 0.6:\n","        check = 1\n","    if check == 0:\n","      Factors.append(PBSCorr['Col Name'][count])\n","    count += 1\n","\n","  Predictors = X[Factors]\n","  print(Factors)\n","  scaler = StandardScaler() #changed to be more generic\n","  scaler.fit(Predictors)\n","  ScaledData = scaler.transform(Predictors)\n","  #ScaledData = scaler.fit_transform(Predictors removed to allow more scaling\n","  ScaledInputs = scaler.transform(inputs)\n","  ScaledInputsFrame = pd.DataFrame(ScaledInputs, columns = Factors)\n","  ScaledExpFrame = pd.DataFrame(ScaledData, columns = Factors)\n","  unique_seed = 1973\n","  X_train, X_test, y_train, y_test = train_test_split(ScaledExpFrame, y, test_size = 0.2, random_state=unique_seed)\n","  log_reg_single = LogisticRegression(random_state=unique_seed, max_iter=500)\n","  log_reg_single.fit(X_train, y_train)\n","  y_pred = log_reg_single.predict(X_test)\n","  y_prob = log_reg_single.predict_proba(X_test)[:, 1]\n","  #results = pd.DataFrame({ removing the results\n","  #  'Win Predictions': y_pred,\n","  #  'Actual': y_test,\n","  #  'Probabilities': y_prob})\n","\n","  #print(results)\n","  #creating confusion matrix based off of the tested and predicted dependent variables\n","  conf_matrix_single = confusion_matrix(y_test, y_pred)\n","  sns.heatmap(conf_matrix_single, annot=True, fmt=\"d\", cmap=\"Blues\",\n","              xticklabels=[\"0 (Lost Game)\", \"1 (Won Game)\"],\n","              yticklabels=[\"0 (Lost Game)\", \"1 (Won Game)\"])\n","\n","  # Add title and labels\n","  plt.title(\"Confusion Matrix\")\n","  plt.xlabel(\"Predicted\")\n","  plt.ylabel(\"Actual\")\n","  plt.show()\n","\n","  MU_prob = log_reg_single.predict_proba(ScaledInputsFrame)[:, 1]\n","  print(\"Model Team Win Prob\", MU_prob)\n","  return MU_prob\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6R-wEQLUkzLk","executionInfo":{"status":"ok","timestamp":1745871135813,"user_tz":240,"elapsed":26455,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"9b2cd53b-dfe6-4b17-bb08-0d3a1f5a23d1"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Content of stderr:\n","/root/.cache/ipython/cython/_cython_magic_807c004445d9aac3f15721236f98af519173dbab.c:6691:18: warning: ‘__Pyx_PyLong_AbsNeg’ defined but not used [-Wunused-function]\n"," 6691 | static PyObject *__Pyx_PyLong_AbsNeg(PyObject *n) {\n","      |                  ^~~~~~~~~~~~~~~~~~~"]}]},{"cell_type":"code","source":["#Upload Knicks Dataset and clean\n","rawdf = pd.read_csv('Knicks_Season.csv')\n","\n","df = pd.read_csv('Knicks_Season.csv')\n","\n","df.drop(columns=['Date', 'Rk', 'Gtm', 'H/@', 'score OT', 'Opp', 'score Opp', 'score Tm'], inplace=True)\n","\n","df['score Rslt'] = df['score Rslt'].map({'W': 1, 'L': 0})\n","\n","df = df.dropna()"],"metadata":{"id":"DPq1aTg0AGd0","executionInfo":{"status":"ok","timestamp":1745871135877,"user_tz":240,"elapsed":63,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["#Now lets do the same for the Celtics, upload dataset\n","#Celtics\n","dfc = pd.read_csv('Celtics_Season.csv')\n","\n","dfc.drop(columns=['Date', 'Rk', 'Gtm', 'H/@', 'score OT', 'Opp', 'score Opp', 'score Tm'], inplace=True)\n","\n","dfc['score Rslt'] = dfc['score Rslt'].map({'W': 1, 'L': 0})\n","\n","dfc = dfc.dropna()"],"metadata":{"id":"w3DVKNobm7di"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Now lets test the Knicks model against the Celtics"],"metadata":{"id":"7O__G9AQuFqo"}},{"cell_type":"code","source":["#Now Lets calculate the important factors to the Knicks Model ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n","#efg = (FG + 0.5*3P)/FGA\n","def Tefg(Boxscore):\n","  metric = (Boxscore['Team FG'].sum() + 0.5*Boxscore['Team 3P'].sum())/Boxscore['Team FGA'].sum()\n","  return metric\n","\n","def Oefg(Boxscore):\n","  metric = (Boxscore['Opponent FG'].sum() + 0.5*Boxscore['Opponent 3P'].sum())/Boxscore['Opponent FGA'].sum()\n","  return metric\n","\n","MUTefg = [(Tefg(df) + Oefg(dfc))/2]\n","\n","MUOefg = [(Tefg(dfc) + Oefg(df))/2]\n","\n","MUODRB = [(dfc['Team DRB'].mean() + df['Opponent DRB'].mean())/2]\n","\n","MUTDRB = [(df['Team DRB'].mean() + dfc['Opponent DRB'].mean())/2]\n","\n","MUTD3P = [(df['Team 3P'].mean() + dfc['Opponent 3P'].mean())/2]\n","\n","avgtestlist = pd.DataFrame(list(zip(MUTefg, MUOefg, MUODRB, MUTDRB, MUTD3P)), columns = ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P'])\n","avgtestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"oBVnP_5em8W7","executionInfo":{"status":"ok","timestamp":1745817575345,"user_tz":240,"elapsed":11,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"34ef3697-6ab7-40f5-fa64-a7c7ba29c631"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent eFG%  Opponent DRB   Team DRB    Team 3P\n","0   0.539278       0.554916     32.445122  32.384146  12.719512"],"text/html":["\n","  <div id=\"df-86ae8b90-87ea-4eda-8de9-b7b3c5f76774\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent eFG%</th>\n","      <th>Opponent DRB</th>\n","      <th>Team DRB</th>\n","      <th>Team 3P</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.539278</td>\n","      <td>0.554916</td>\n","      <td>32.445122</td>\n","      <td>32.384146</td>\n","      <td>12.719512</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86ae8b90-87ea-4eda-8de9-b7b3c5f76774')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86ae8b90-87ea-4eda-8de9-b7b3c5f76774 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86ae8b90-87ea-4eda-8de9-b7b3c5f76774');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_b4d29a6c-28b2-4a8c-9bed-5e7ce03243df\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('avgtestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b4d29a6c-28b2-4a8c-9bed-5e7ce03243df button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('avgtestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"avgtestlist","summary":"{\n  \"name\": \"avgtestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5392783368373688,\n        \"max\": 0.5392783368373688,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5392783368373688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5549155244591284,\n        \"max\": 0.5549155244591284,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5549155244591284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 32.44512195121951,\n        \"max\": 32.44512195121951,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          32.44512195121951\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 32.38414634146341,\n        \"max\": 32.38414634146341,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          32.38414634146341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team 3P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 12.71951219512195,\n        \"max\": 12.71951219512195,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12.71951219512195\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["#Run code on Knicks data to get logistic regression\n","\n","#Knicks factors should be ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n","Input_Opt_cython_CorrOpModel(df, avgtestlist)"],"metadata":{"id":"dDlxX3BsFKgE","colab":{"base_uri":"https://localhost:8080/","height":526},"executionInfo":{"status":"ok","timestamp":1745817576246,"user_tz":240,"elapsed":294,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"14a48e48-1fd7-4120-d270-641324984640"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.57079182]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.57079182])"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["#What if we just use the Knicks and see how they win on average\n","MUTefg = [Tefg(df)]\n","\n","MUOefg = [Oefg(df)]\n","\n","MUODRB = [(df['Opponent DRB'].mean())]\n","\n","MUTDRB = [df['Team DRB'].mean()]\n","\n","MUTD3P = [df['Team 3P'].mean()]\n","\n","indtestlist = pd.DataFrame(list(zip(MUTefg, MUOefg, MUODRB, MUTDRB, MUTD3P)), columns = ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P'])\n","indtestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"g826sxCdsoWO","executionInfo":{"status":"ok","timestamp":1745816693584,"user_tz":240,"elapsed":11,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"5c2cf7b9-2510-45f5-beaa-3eeb3809a09f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent eFG%  Opponent DRB   Team DRB    Team 3P\n","0   0.556186       0.548804      30.95122  31.792683  12.573171"],"text/html":["\n","  <div id=\"df-8f7513b3-c640-4c2c-be34-d200f6fe0bf9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent eFG%</th>\n","      <th>Opponent DRB</th>\n","      <th>Team DRB</th>\n","      <th>Team 3P</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.556186</td>\n","      <td>0.548804</td>\n","      <td>30.95122</td>\n","      <td>31.792683</td>\n","      <td>12.573171</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f7513b3-c640-4c2c-be34-d200f6fe0bf9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8f7513b3-c640-4c2c-be34-d200f6fe0bf9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8f7513b3-c640-4c2c-be34-d200f6fe0bf9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_8170e9c6-71ae-42cc-a009-a5e8cae7f35e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('indtestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8170e9c6-71ae-42cc-a009-a5e8cae7f35e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('indtestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"indtestlist","summary":"{\n  \"name\": \"indtestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5561859193438141,\n        \"max\": 0.5561859193438141,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5561859193438141\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5488042269187987,\n        \"max\": 0.5488042269187987,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5488042269187987\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 30.951219512195124,\n        \"max\": 30.951219512195124,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30.951219512195124\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 31.79268292682927,\n        \"max\": 31.79268292682927,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          31.79268292682927\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team 3P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 12.573170731707316,\n        \"max\": 12.573170731707316,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12.573170731707316\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(df, indtestlist)"],"metadata":{"id":"Tt3oiMayA0iU","colab":{"base_uri":"https://localhost:8080/","height":847},"executionInfo":{"status":"ok","timestamp":1745816695259,"user_tz":240,"elapsed":297,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"2c73a498-b4ab-441f-fa8e-d957aa8796eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n","    Win Predictions  Actual  Probabilities\n","44              1.0     1.0       0.867459\n","29              0.0     1.0       0.142181\n","2               0.0     0.0       0.376330\n","80              0.0     0.0       0.243550\n","37              1.0     1.0       0.754895\n","45              1.0     1.0       0.836597\n","46              1.0     1.0       0.947482\n","21              1.0     1.0       0.965188\n","67              0.0     0.0       0.098285\n","74              1.0     1.0       0.884671\n","65              1.0     0.0       0.670760\n","48              0.0     0.0       0.025233\n","23              1.0     1.0       0.912314\n","33              1.0     1.0       0.966143\n","36              0.0     0.0       0.187534\n","11              1.0     1.0       0.923145\n","13              1.0     1.0       0.974655\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.69917353]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.69917353])"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["#But what if we just do the Celtics stats as inputs\n","MUTefg = [Oefg(dfc)]\n","\n","MUOefg = [Tefg(dfc)]\n","\n","MUODRB = [dfc['Team DRB'].mean()]\n","\n","MUTDRB = [dfc['Opponent DRB'].mean()]\n","\n","MUTD3P = [dfc['Opponent 3P'].mean()]\n","\n","CeltOpptestlist = pd.DataFrame(list(zip(MUTefg, MUOefg, MUODRB, MUTDRB, MUTD3P)), columns = ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P'])\n","CeltOpptestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"eBOthEN1yQ1j","executionInfo":{"status":"ok","timestamp":1745816816362,"user_tz":240,"elapsed":20,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"ff21e31b-df4e-47c2-ab63-dacfc7bf2bb3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent eFG%  Opponent DRB  Team DRB    Team 3P\n","0   0.522371       0.561027     33.939024  32.97561  12.865854"],"text/html":["\n","  <div id=\"df-dabf5739-af3b-41a0-9792-50a9c3a55e65\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent eFG%</th>\n","      <th>Opponent DRB</th>\n","      <th>Team DRB</th>\n","      <th>Team 3P</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.522371</td>\n","      <td>0.561027</td>\n","      <td>33.939024</td>\n","      <td>32.97561</td>\n","      <td>12.865854</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dabf5739-af3b-41a0-9792-50a9c3a55e65')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dabf5739-af3b-41a0-9792-50a9c3a55e65 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dabf5739-af3b-41a0-9792-50a9c3a55e65');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_3edc62cb-97d2-44de-b9af-c50dd256ab04\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Opptestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3edc62cb-97d2-44de-b9af-c50dd256ab04 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Opptestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Opptestlist","summary":"{\n  \"name\": \"Opptestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5223707543309235,\n        \"max\": 0.5223707543309235,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5223707543309235\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5610268219994582,\n        \"max\": 0.5610268219994582,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5610268219994582\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 33.9390243902439,\n        \"max\": 33.9390243902439,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          33.9390243902439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 32.97560975609756,\n        \"max\": 32.97560975609756,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          32.97560975609756\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team 3P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 12.865853658536585,\n        \"max\": 12.865853658536585,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12.865853658536585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(df, CeltOpptestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":847},"id":"s5w4qJ1ayoNT","executionInfo":{"status":"ok","timestamp":1745816833086,"user_tz":240,"elapsed":444,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"f8eb2117-14f9-449e-95ed-37e3749dcff4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n","    Win Predictions  Actual  Probabilities\n","44              1.0     1.0       0.867459\n","29              0.0     1.0       0.142181\n","2               0.0     0.0       0.376330\n","80              0.0     0.0       0.243550\n","37              1.0     1.0       0.754895\n","45              1.0     1.0       0.836597\n","46              1.0     1.0       0.947482\n","21              1.0     1.0       0.965188\n","67              0.0     0.0       0.098285\n","74              1.0     1.0       0.884671\n","65              1.0     0.0       0.670760\n","48              0.0     0.0       0.025233\n","23              1.0     1.0       0.912314\n","33              1.0     1.0       0.966143\n","36              0.0     0.0       0.187534\n","11              1.0     1.0       0.923145\n","13              1.0     1.0       0.974655\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.43212157]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.43212157])"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["#Lets do it for the Pistons\n","MUTefg = [Oefg(dfp)]\n","\n","MUOefg = [Tefg(dfp)]\n","\n","MUODRB = [dfp['Team DRB'].mean()]\n","\n","MUTDRB = [dfp['Opponent DRB'].mean()]\n","\n","MUTD3P = [dfp['Opponent 3P'].mean()]\n","\n","PistOpptestlist = pd.DataFrame(list(zip(MUTefg, MUOefg, MUODRB, MUTDRB, MUTD3P)), columns = ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P'])\n","PistOpptestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"zfn-X7Lz24NV","executionInfo":{"status":"ok","timestamp":1745817999052,"user_tz":240,"elapsed":31,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"0eb6d992-29a0-42c2-9d2b-32cf27d2a4c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent eFG%  Opponent DRB   Team DRB    Team 3P\n","0   0.538904       0.547128     33.402439  31.926829  13.646341"],"text/html":["\n","  <div id=\"df-6b172c24-67be-42c9-b3ca-de518a19a983\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent eFG%</th>\n","      <th>Opponent DRB</th>\n","      <th>Team DRB</th>\n","      <th>Team 3P</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.538904</td>\n","      <td>0.547128</td>\n","      <td>33.402439</td>\n","      <td>31.926829</td>\n","      <td>13.646341</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b172c24-67be-42c9-b3ca-de518a19a983')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b172c24-67be-42c9-b3ca-de518a19a983 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b172c24-67be-42c9-b3ca-de518a19a983');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_016ffee2-fb7c-40cb-902c-73e8ccedb429\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PistOpptestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_016ffee2-fb7c-40cb-902c-73e8ccedb429 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PistOpptestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PistOpptestlist","summary":"{\n  \"name\": \"PistOpptestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5389042995839113,\n        \"max\": 0.5389042995839113,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5389042995839113\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5471275295395899,\n        \"max\": 0.5471275295395899,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5471275295395899\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 33.40243902439025,\n        \"max\": 33.40243902439025,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          33.40243902439025\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 31.926829268292682,\n        \"max\": 31.926829268292682,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          31.926829268292682\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team 3P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 13.646341463414634,\n        \"max\": 13.646341463414634,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          13.646341463414634\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(df, PistOpptestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"B-gJ1_Ef3HiY","executionInfo":{"status":"ok","timestamp":1745818018516,"user_tz":240,"elapsed":1076,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"6c7f10dc-da4b-4f66-a83a-81907bfa28ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.58515072]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.58515072])"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["#And the Cavs\n","MUTefg = [Oefg(dfca)]\n","\n","MUOefg = [Tefg(dfca)]\n","\n","MUODRB = [dfca['Team DRB'].mean()]\n","\n","MUTDRB = [dfca['Opponent DRB'].mean()]\n","\n","MUTD3P = [dfca['Opponent 3P'].mean()]\n","\n","CavsOpptestlist = pd.DataFrame(list(zip(MUTefg, MUOefg, MUODRB, MUTDRB, MUTD3P)), columns = ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P'])\n","CavsOpptestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"Q-mkV3WX3S6E","executionInfo":{"status":"ok","timestamp":1745818147813,"user_tz":240,"elapsed":26,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"5f34dfc5-2687-40a4-8146-18e26f7f1a5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent eFG%  Opponent DRB  Team DRB    Team 3P\n","0    0.52777       0.578117     34.219512      32.0  13.463415"],"text/html":["\n","  <div id=\"df-69898c1d-17c6-4e91-909c-6faccd858c3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent eFG%</th>\n","      <th>Opponent DRB</th>\n","      <th>Team DRB</th>\n","      <th>Team 3P</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.52777</td>\n","      <td>0.578117</td>\n","      <td>34.219512</td>\n","      <td>32.0</td>\n","      <td>13.463415</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69898c1d-17c6-4e91-909c-6faccd858c3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-69898c1d-17c6-4e91-909c-6faccd858c3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-69898c1d-17c6-4e91-909c-6faccd858c3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_b7fcf796-812e-4a63-b637-4a8d33dc6767\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('CavsOpptestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b7fcf796-812e-4a63-b637-4a8d33dc6767 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('CavsOpptestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"CavsOpptestlist","summary":"{\n  \"name\": \"CavsOpptestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5277703246579017,\n        \"max\": 0.5277703246579017,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5277703246579017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5781166039763568,\n        \"max\": 0.5781166039763568,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5781166039763568\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 34.21951219512195,\n        \"max\": 34.21951219512195,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          34.21951219512195\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 32.0,\n        \"max\": 32.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team 3P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 13.463414634146341,\n        \"max\": 13.463414634146341,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          13.463414634146341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(df, CavsOpptestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"4iTz3spc3kD9","executionInfo":{"status":"ok","timestamp":1745818167470,"user_tz":240,"elapsed":290,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"07bd6d09-212c-498e-bb9e-7581f421af16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.35374908]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.35374908])"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","source":["## Now lets do the same for the Celtics"],"metadata":{"id":"OVkd1_eqAeDG"}},{"cell_type":"code","source":["#The Celtics have these key metrics ['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST']\n","\n","MUTefg = [(Tefg(dfc) + Oefg(df))/2]\n","\n","MUTOFG = [(dfc['Opponent FG'].mean() + df['Team FG'].mean())/2]\n","\n","MUOTRB = [(df['Team TRB'].mean() + dfc['Opponent TRB'].mean())/2]\n","\n","MUO3PP = [(df['Team 3P%'].mean() + dfc['Opponent 3P%'].mean())/2]\n","\n","MUOAST = [(df['Team AST'].mean() + dfc['Opponent AST'].mean())/2]\n","\n","avgtestlist = pd.DataFrame(list(zip(MUTefg, MUTOFG, MUOTRB, MUO3PP, MUOAST)), columns = ['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST'])\n","avgtestlist"],"metadata":{"id":"wlYEBeDxAatq","colab":{"base_uri":"https://localhost:8080/","height":89},"executionInfo":{"status":"ok","timestamp":1745816492489,"user_tz":240,"elapsed":17,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"8a4e6062-ed08-420c-8348-8ee64b4ce06c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent FG  Opponent TRB  Opponent 3P%  Opponent AST\n","0   0.554916     41.79878     43.164634      0.356561     25.743902"],"text/html":["\n","  <div id=\"df-fe5fbc84-ab79-436b-856e-7c23c7055021\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent FG</th>\n","      <th>Opponent TRB</th>\n","      <th>Opponent 3P%</th>\n","      <th>Opponent AST</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.554916</td>\n","      <td>41.79878</td>\n","      <td>43.164634</td>\n","      <td>0.356561</td>\n","      <td>25.743902</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe5fbc84-ab79-436b-856e-7c23c7055021')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fe5fbc84-ab79-436b-856e-7c23c7055021 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fe5fbc84-ab79-436b-856e-7c23c7055021');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_6837c81d-28b3-4623-8566-e40803a85dc6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('avgtestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6837c81d-28b3-4623-8566-e40803a85dc6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('avgtestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"avgtestlist","summary":"{\n  \"name\": \"avgtestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5549155244591284,\n        \"max\": 0.5549155244591284,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5549155244591284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent FG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 41.798780487804876,\n        \"max\": 41.798780487804876,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          41.798780487804876\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent TRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 43.16463414634146,\n        \"max\": 43.16463414634146,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          43.16463414634146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent 3P%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.3565609756097561,\n        \"max\": 0.3565609756097561,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.3565609756097561\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 25.74390243902439,\n        \"max\": 25.74390243902439,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          25.74390243902439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(dfc, avgtestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":847},"id":"ZPPwdFrqwCVc","executionInfo":{"status":"ok","timestamp":1745816494187,"user_tz":240,"elapsed":267,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"6abf7d7c-45fc-4a1b-8a3b-1ea8c8c2b173"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST']\n","    Win Predictions  Actual  Probabilities\n","44              0.0     0.0       0.031346\n","29              1.0     0.0       0.669846\n","2               1.0     1.0       0.689590\n","80              1.0     1.0       0.986565\n","37              0.0     0.0       0.051455\n","45              1.0     1.0       0.868358\n","46              1.0     0.0       0.794081\n","21              1.0     1.0       0.552586\n","67              0.0     1.0       0.473741\n","74              1.0     1.0       0.965213\n","65              1.0     0.0       0.942449\n","48              1.0     1.0       0.920747\n","23              0.0     0.0       0.020918\n","33              1.0     1.0       0.818012\n","36              1.0     1.0       0.942703\n","11              1.0     0.0       0.768598\n","13              0.0     1.0       0.076545\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.84063695]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.84063695])"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["#And lets do it the other way\n","MUTefg = [Tefg(dfc)]\n","\n","MUTOFG = [dfc['Opponent FG'].mean()]\n","\n","MUOTRB = [dfc['Opponent TRB'].mean()]\n","\n","MUO3PP = [dfc['Opponent 3P%'].mean()]\n","\n","MUOAST = [dfc['Opponent AST'].mean()]\n","\n","indtestlist = pd.DataFrame(list(zip(MUTefg, MUTOFG, MUOTRB, MUO3PP, MUOAST)), columns = ['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST'])\n","indtestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"k4UvSkSQwIuI","executionInfo":{"status":"ok","timestamp":1745816363786,"user_tz":240,"elapsed":22,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"6a9d5956-bfc3-4c9d-a8f2-92b2ee23245d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent FG  Opponent TRB  Opponent 3P%  Opponent AST\n","0   0.561027    40.268293     43.682927       0.34689          24.0"],"text/html":["\n","  <div id=\"df-7d1376eb-9dd0-40e2-95e6-684fa74a218b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent FG</th>\n","      <th>Opponent TRB</th>\n","      <th>Opponent 3P%</th>\n","      <th>Opponent AST</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.561027</td>\n","      <td>40.268293</td>\n","      <td>43.682927</td>\n","      <td>0.34689</td>\n","      <td>24.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d1376eb-9dd0-40e2-95e6-684fa74a218b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d1376eb-9dd0-40e2-95e6-684fa74a218b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d1376eb-9dd0-40e2-95e6-684fa74a218b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_5f205714-8e60-4a6e-859b-13e5c75edccb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('indtestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5f205714-8e60-4a6e-859b-13e5c75edccb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('indtestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"indtestlist","summary":"{\n  \"name\": \"indtestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5610268219994582,\n        \"max\": 0.5610268219994582,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5610268219994582\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent FG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 40.26829268292683,\n        \"max\": 40.26829268292683,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          40.26829268292683\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent TRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 43.68292682926829,\n        \"max\": 43.68292682926829,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          43.68292682926829\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent 3P%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.346890243902439,\n        \"max\": 0.346890243902439,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.346890243902439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 24.0,\n        \"max\": 24.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          24.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(dfc, indtestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":847},"id":"eD--qgZ1w6Ku","executionInfo":{"status":"ok","timestamp":1745816510336,"user_tz":240,"elapsed":526,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"276103e0-faa7-496f-f3e8-a0ff9a2f0295"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST']\n","    Win Predictions  Actual  Probabilities\n","44              0.0     0.0       0.031346\n","29              1.0     0.0       0.669846\n","2               1.0     1.0       0.689590\n","80              1.0     1.0       0.986565\n","37              0.0     0.0       0.051455\n","45              1.0     1.0       0.868358\n","46              1.0     0.0       0.794081\n","21              1.0     1.0       0.552586\n","67              0.0     1.0       0.473741\n","74              1.0     1.0       0.965213\n","65              1.0     0.0       0.942449\n","48              1.0     1.0       0.920747\n","23              0.0     0.0       0.020918\n","33              1.0     1.0       0.818012\n","36              1.0     1.0       0.942703\n","11              1.0     0.0       0.768598\n","13              0.0     1.0       0.076545\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.92665666]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.92665666])"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["#Just Plug in the Knicks Stats\n","MUTefg = [Oefg(df)]\n","\n","MUTOFG = [df['Team FG'].mean()]\n","\n","MUOTRB = [df['Team TRB'].mean()]\n","\n","MUO3PP = [df['Team 3P%'].mean()]\n","\n","MUOAST = [df['Team AST'].mean()]\n","\n","Opptestlist = pd.DataFrame(list(zip(MUTefg, MUTOFG, MUOTRB, MUO3PP, MUOAST)), columns = ['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST'])\n","Opptestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"ZFWHPOSGw-lP","executionInfo":{"status":"ok","timestamp":1745816945282,"user_tz":240,"elapsed":19,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"6a0626c9-fdc3-4328-f1ba-ae88ffdb8380"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent FG  Opponent TRB  Opponent 3P%  Opponent AST\n","0   0.548804    43.329268     42.646341      0.366232     27.487805"],"text/html":["\n","  <div id=\"df-f1ea72a0-811c-4b22-bb0c-e5b44c066d99\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent FG</th>\n","      <th>Opponent TRB</th>\n","      <th>Opponent 3P%</th>\n","      <th>Opponent AST</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.548804</td>\n","      <td>43.329268</td>\n","      <td>42.646341</td>\n","      <td>0.366232</td>\n","      <td>27.487805</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1ea72a0-811c-4b22-bb0c-e5b44c066d99')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f1ea72a0-811c-4b22-bb0c-e5b44c066d99 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f1ea72a0-811c-4b22-bb0c-e5b44c066d99');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_b023ccd5-e680-4063-b44d-6b90f2d91fc0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Opptestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b023ccd5-e680-4063-b44d-6b90f2d91fc0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Opptestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Opptestlist","summary":"{\n  \"name\": \"Opptestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5488042269187987,\n        \"max\": 0.5488042269187987,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5488042269187987\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent FG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 43.329268292682926,\n        \"max\": 43.329268292682926,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          43.329268292682926\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent TRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 42.646341463414636,\n        \"max\": 42.646341463414636,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          42.646341463414636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent 3P%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.36623170731707316,\n        \"max\": 0.36623170731707316,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.36623170731707316\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 27.48780487804878,\n        \"max\": 27.48780487804878,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          27.48780487804878\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(dfc, Opptestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":847},"id":"flLLjcdmzIIy","executionInfo":{"status":"ok","timestamp":1745816957489,"user_tz":240,"elapsed":785,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"f8a20961-012c-45cc-9e63-994ec9e04060"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent FG', 'Opponent TRB', 'Opponent 3P%', 'Opponent AST']\n","    Win Predictions  Actual  Probabilities\n","44              0.0     0.0       0.031346\n","29              1.0     0.0       0.669846\n","2               1.0     1.0       0.689590\n","80              1.0     1.0       0.986565\n","37              0.0     0.0       0.051455\n","45              1.0     1.0       0.868358\n","46              1.0     0.0       0.794081\n","21              1.0     1.0       0.552586\n","67              0.0     1.0       0.473741\n","74              1.0     1.0       0.965213\n","65              1.0     0.0       0.942449\n","48              1.0     1.0       0.920747\n","23              0.0     0.0       0.020918\n","33              1.0     1.0       0.818012\n","36              1.0     1.0       0.942703\n","11              1.0     0.0       0.768598\n","13              0.0     1.0       0.076545\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.68772791]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.68772791])"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["## Lets Do it for the Pistons and Cavs"],"metadata":{"id":"8TB1liqi0agZ"}},{"cell_type":"code","source":["#Pistons\n","dfp = pd.read_csv('Pistons_Season.csv')\n","\n","dfp.drop(columns=['Date', 'Rk', 'Gtm', 'H/@', 'score OT', 'Opp', 'score Opp', 'score Tm'], inplace=True)\n","\n","dfp['score Rslt'] = dfp['score Rslt'].map({'W': 1, 'L': 0})\n","\n","dfp = dfp.dropna()"],"metadata":{"id":"6M9cxCGA0qJC","executionInfo":{"status":"ok","timestamp":1745874505239,"user_tz":240,"elapsed":44,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#Cavs\n","dfca = pd.read_csv('Cavs_Season.csv')\n","\n","dfca.drop(columns=['Date', 'Rk', 'Gtm', 'H/@', 'score OT', 'Opp', 'score Opp', 'score Tm'], inplace=True)\n","\n","dfca['score Rslt'] = dfca['score Rslt'].map({'W': 1, 'L': 0})\n","\n","dfca = dfca.dropna()"],"metadata":{"id":"mowtKHVtzK7i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#The Pistons win factors are ['Opponent DRB', 'Team FG%', 'Opponent FG', 'Team DRB', 'Opponent BLK']\n","MUODRB = [df['Team DRB'].mean()]\n","\n","MUTFGP = [df['Opponent FG%'].mean()]\n","\n","MUOFG = [df['Team FG'].mean()]\n","\n","MUTDRB = [df['Opponent DRB'].mean()]\n","\n","MUOBLK = [df['Team BLK'].mean()]\n","\n","Opptestlist = pd.DataFrame(list(zip(MUODRB, MUTFGP, MUOFG, MUTDRB, MUOBLK)), columns = ['Opponent DRB', 'Team FG%', 'Opponent FG', 'Team DRB', 'Opponent BLK'])\n","Opptestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"1EBD4ZjP0v6j","executionInfo":{"status":"ok","timestamp":1745817886053,"user_tz":240,"elapsed":14,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"c3da3fd7-e4c4-4e6f-9d14-faac38cc0059"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Opponent DRB  Team FG%  Opponent FG  Team DRB  Opponent BLK\n","0     31.792683   0.47522    43.329268  30.95122       3.95122"],"text/html":["\n","  <div id=\"df-515cbf83-d781-4daf-a68c-46294fa1f054\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Opponent DRB</th>\n","      <th>Team FG%</th>\n","      <th>Opponent FG</th>\n","      <th>Team DRB</th>\n","      <th>Opponent BLK</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>31.792683</td>\n","      <td>0.47522</td>\n","      <td>43.329268</td>\n","      <td>30.95122</td>\n","      <td>3.95122</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-515cbf83-d781-4daf-a68c-46294fa1f054')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-515cbf83-d781-4daf-a68c-46294fa1f054 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-515cbf83-d781-4daf-a68c-46294fa1f054');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_aab923ba-fbe9-4c22-9b7e-46c4b01ab5bd\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Opptestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_aab923ba-fbe9-4c22-9b7e-46c4b01ab5bd button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Opptestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Opptestlist","summary":"{\n  \"name\": \"Opptestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 31.79268292682927,\n        \"max\": 31.79268292682927,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          31.79268292682927\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team FG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.475219512195122,\n        \"max\": 0.475219512195122,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.475219512195122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent FG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 43.329268292682926,\n        \"max\": 43.329268292682926,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          43.329268292682926\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 30.951219512195124,\n        \"max\": 30.951219512195124,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30.951219512195124\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent BLK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3.951219512195122,\n        \"max\": 3.951219512195122,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3.951219512195122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(dfp, Opptestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"Tq6soMD12cKf","executionInfo":{"status":"ok","timestamp":1745817889433,"user_tz":240,"elapsed":270,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"c4f87cce-b413-4d18-89b5-c5ca224bdacf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Opponent DRB', 'Team FG%', 'Opponent FG', 'Team DRB', 'Opponent BLK']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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ymHnzp35GBERERG9TlqS0KBBg7fut7GxQWBgYD5FQ0REZDymOsWOd1wkIiIyMhPNEQrufRKIiIhILvYkEBERGRmHG4iIiCgHppklcLiBiIiItGJPAhERkZFxuIGIiIi0MtEcgcMNREREpB17EoiIiIyMww1ERESklYznLhgCkwQiIiJjM80cgXMSiIiISDv2JBARERmZiXYkMEkgIiIyNlOduMjhBiIiItKKPQlERERGxtUNREREpJ1p5ggcbiAiIiLt2JNARERkZCbakcAkgYiIyNi4uoGIiIgKFfYkEBERGRlXNxAREZFWHG4gIiKiQoVJAhEREWnF4QYiIiIjM9XhBiYJRERERmaqExc53EBERERasSeBiIjIyDjcQERERFqZaI7A4QYiIiLSjj0JRERExmaiXQlMEoiIiIyMqxuIiIioUGFPAhERkZFxdQMRERFpZaI5AocbiIiIjE5hoE1PsbGxaNOmDTw8PKBQKLB+/Xq9zmeSQEREVEilpaWhWrVqmD17dq7O53ADERGRkcla3dCyZUu0bNky1+czSSAiIjIyTlwkIiIio1KpVFCpVBplSqUSSqXSKO0VyiTBqlBelelRqVSIjIxERESE0X6BST8PlnWTHQKBn433kaG+l8b8GImxY8dqlI0ePRpjxowxTANvUAghhFFqpvfe48eP4eDggEePHsHe3l52OEQFBj8blFt56UlQKBRYt24dgoODdW6Pf3MTERGZCGMOLWjDJIGIiKiQSk1NxYULF9Svk5OTER8fD2dnZ5QpU+ad5zNJICIiKqQOHz6MoKAg9evw8HAAQEhICBYtWvTO85kkkNEolUqMHj2aE7OI3sDPBuWXRo0aIS9TDzlxkYiIiLTibZmJiIhIKyYJREREpBWTBCIiItKKSUIhlZGRgXLlymHfvn2yQzE5Xbp0wdSpU2WHQUbSsGFDrFixQnYYJikjIwNeXl44fPiw7FAonzBJMAGzZ8+Gl5cXrKysUKdOHRw6dOid58ybNw/e3t6oV6+euiw3zxLXlT5179y5E61bt4aLiwusrKzg4+ODzp07IzY21iix6ev777/HhAkT8OjRI9mhUA5iY2PRpk0beHh46PW7t2HDBty+fRtdunQB8DIh/OijjzSO2bx5MxQKRbbb3I4ZM0andeV5IYTAb7/9hrp168Le3h62traoVKkSBg8erLHW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\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.48526793]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.48526793])"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["#The Cavs win factors are ['Opponent 3P%', 'Team eFG%', 'Opponent FG', 'Opponent TRB', 'Team DRB']\n","MUO3PP = [df['Team 3P%'].mean()]\n","\n","MUTefg = [Oefg(df)]\n","\n","MUOFG = [df['Team FG'].mean()]\n","\n","MUOTRB = [df['Team TRB'].mean()]\n","\n","MUTDRB = [df['Opponent DRB'].mean()]\n","\n","Opptestlist = pd.DataFrame(list(zip(MUO3PP, MUTefg, MUOFG, MUOTRB, MUTDRB)), columns = ['Opponent 3P%', 'Team eFG%', 'Opponent FG', 'Opponent TRB', 'Team DRB'])\n","Opptestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"j67JlI1f1DCZ","executionInfo":{"status":"ok","timestamp":1745818427638,"user_tz":240,"elapsed":10,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"091ab0f7-7df9-490f-f0de-197916825652"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Opponent 3P%  Team eFG%  Opponent FG  Opponent TRB  Team DRB\n","0      0.366232   0.548804    43.329268     42.646341  30.95122"],"text/html":["\n","  <div id=\"df-1641bf45-721c-425f-9658-6acd9ac2e2c7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Opponent 3P%</th>\n","      <th>Team eFG%</th>\n","      <th>Opponent FG</th>\n","      <th>Opponent TRB</th>\n","      <th>Team DRB</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.366232</td>\n","      <td>0.548804</td>\n","      <td>43.329268</td>\n","      <td>42.646341</td>\n","      <td>30.95122</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1641bf45-721c-425f-9658-6acd9ac2e2c7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1641bf45-721c-425f-9658-6acd9ac2e2c7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1641bf45-721c-425f-9658-6acd9ac2e2c7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_11dbb3e1-f2f7-4b80-b0e0-c5c6700ea4b1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Opptestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_11dbb3e1-f2f7-4b80-b0e0-c5c6700ea4b1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Opptestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Opptestlist","summary":"{\n  \"name\": \"Opptestlist\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Opponent 3P%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.36623170731707316,\n        \"max\": 0.36623170731707316,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.36623170731707316\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5488042269187987,\n        \"max\": 0.5488042269187987,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5488042269187987\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent FG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 43.329268292682926,\n        \"max\": 43.329268292682926,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          43.329268292682926\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent TRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 42.646341463414636,\n        \"max\": 42.646341463414636,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          42.646341463414636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 30.951219512195124,\n        \"max\": 30.951219512195124,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30.951219512195124\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(dfca, Opptestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"cmlvN1js4jCl","executionInfo":{"status":"ok","timestamp":1745818431150,"user_tz":240,"elapsed":302,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"cce2eb21-8dfb-48a4-a245-c41701bbfff3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Opponent 3P%', 'Team eFG%', 'Opponent FG', 'Opponent TRB', 'Team DRB']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.69174338]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.69174338])"]},"metadata":{},"execution_count":71}]},{"cell_type":"markdown","source":["## Testing on current playoff results"],"metadata":{"id":"n0qGAo7qNrE4"}},{"cell_type":"code","source":["#And lets run it for the Games against the Pistons so far\n","MUTefg = [0.581,0.481,0.535,0.456]\n","\n","MUOefg = [0.564,0.486,0.547,0.470]\n","\n","MUODRB = [26,36,32,40]\n","\n","MUTDRB = [28,27,31,26]\n","\n","MUTD3P = [10,10,12,15]\n","\n","PistGametestlist = pd.DataFrame(list(zip(MUTefg, MUOefg, MUODRB, MUTDRB, MUTD3P)), columns = ['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P'])\n","PistGametestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"GYek8dLAB-b3","executionInfo":{"status":"ok","timestamp":1745875444126,"user_tz":240,"elapsed":55,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"6c449f65-cb55-483a-c240-4fb57a830fc6"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Team eFG%  Opponent eFG%  Opponent DRB  Team DRB  Team 3P\n","0      0.581          0.564            26        28       10\n","1      0.481          0.486            36        27       10\n","2      0.535          0.547            32        31       12\n","3      0.456          0.470            40        26       15"],"text/html":["\n","  <div id=\"df-a34e28c9-2601-4db8-805e-6c08c3a2b105\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Team eFG%</th>\n","      <th>Opponent eFG%</th>\n","      <th>Opponent DRB</th>\n","      <th>Team DRB</th>\n","      <th>Team 3P</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.581</td>\n","      <td>0.564</td>\n","      <td>26</td>\n","      <td>28</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.481</td>\n","      <td>0.486</td>\n","      <td>36</td>\n","      <td>27</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.535</td>\n","      <td>0.547</td>\n","      <td>32</td>\n","      <td>31</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.456</td>\n","      <td>0.470</td>\n","      <td>40</td>\n","      <td>26</td>\n","      <td>15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a34e28c9-2601-4db8-805e-6c08c3a2b105')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a34e28c9-2601-4db8-805e-6c08c3a2b105 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a34e28c9-2601-4db8-805e-6c08c3a2b105');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-78a4880c-211c-4b5c-b2cd-91afe8dd2ea3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78a4880c-211c-4b5c-b2cd-91afe8dd2ea3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-78a4880c-211c-4b5c-b2cd-91afe8dd2ea3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_875c436c-93a0-41f0-8d16-f5e594c29386\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PistGametestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_875c436c-93a0-41f0-8d16-f5e594c29386 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PistGametestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PistGametestlist","summary":"{\n  \"name\": \"PistGametestlist\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Team eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.055918839997505895,\n        \"min\": 0.456,\n        \"max\": 0.581,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.481,\n          0.456,\n          0.581\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent eFG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.045748406165315385,\n        \"min\": 0.47,\n        \"max\": 0.564,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.486,\n          0.47,\n          0.564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 26,\n        \"max\": 40,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          36,\n          40,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 26,\n        \"max\": 31,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          27,\n          26,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team 3P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 10,\n        \"max\": 15,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10,\n          12,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(df, PistGametestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"mo3xOVBuN12m","executionInfo":{"status":"ok","timestamp":1745875445828,"user_tz":240,"elapsed":432,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"07dcd5ca-19f8-46c6-b6bf-af70416fb83c"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["['Team eFG%', 'Opponent eFG%', 'Opponent DRB', 'Team DRB', 'Team 3P']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.7830232  0.50373599 0.58790238 0.41568408]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.7830232 , 0.50373599, 0.58790238, 0.41568408])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#The Pistons win factors are ['Opponent DRB', 'Team FG%', 'Opponent FG', 'Team DRB', 'Opponent BLK']\n","MUODRB = [28,27,31,26]\n","\n","MUTFGP = [0.477,0.446,0.453,0.429]\n","\n","MUOFG = [49,34,40,34]\n","\n","MUTDRB = [26,36,32,40]\n","\n","MUOBLK = [9,1,7,3]\n","\n","PistGametestlist = pd.DataFrame(list(zip(MUODRB, MUTFGP, MUOFG, MUTDRB, MUOBLK)), columns = ['Opponent DRB', 'Team FG%', 'Opponent FG', 'Team DRB', 'Opponent BLK'])\n","PistGametestlist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"7dqYmdvFN1F3","executionInfo":{"status":"ok","timestamp":1745875538680,"user_tz":240,"elapsed":20,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"ca033a36-cf61-49e5-8aa9-561540748d1f"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Opponent DRB  Team FG%  Opponent FG  Team DRB  Opponent BLK\n","0            28     0.477           49        26             9\n","1            27     0.446           34        36             1\n","2            31     0.453           40        32             7\n","3            26     0.429           34        40             3"],"text/html":["\n","  <div id=\"df-e061bc0a-fb11-4462-8460-12b02436dca9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Opponent DRB</th>\n","      <th>Team FG%</th>\n","      <th>Opponent FG</th>\n","      <th>Team DRB</th>\n","      <th>Opponent BLK</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28</td>\n","      <td>0.477</td>\n","      <td>49</td>\n","      <td>26</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27</td>\n","      <td>0.446</td>\n","      <td>34</td>\n","      <td>36</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>31</td>\n","      <td>0.453</td>\n","      <td>40</td>\n","      <td>32</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>0.429</td>\n","      <td>34</td>\n","      <td>40</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e061bc0a-fb11-4462-8460-12b02436dca9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e061bc0a-fb11-4462-8460-12b02436dca9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e061bc0a-fb11-4462-8460-12b02436dca9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7f1ee27e-82ce-4205-bb57-c68993efc427\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f1ee27e-82ce-4205-bb57-c68993efc427')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7f1ee27e-82ce-4205-bb57-c68993efc427 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_fb0d4b0d-66db-48a6-8a76-1f92c0d07614\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PistGametestlist')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fb0d4b0d-66db-48a6-8a76-1f92c0d07614 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PistGametestlist');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PistGametestlist","summary":"{\n  \"name\": \"PistGametestlist\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Opponent DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 26,\n        \"max\": 31,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          27,\n          26,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team FG%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.019906029237394377,\n        \"min\": 0.429,\n        \"max\": 0.477,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.446,\n          0.429,\n          0.477\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent FG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 34,\n        \"max\": 49,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          49,\n          34,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Team DRB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 26,\n        \"max\": 40,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          36,\n          40,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Opponent BLK\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["Input_Opt_cython_CorrOpModel(dfp, PistGametestlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"OLvW3dwGN2i3","executionInfo":{"status":"ok","timestamp":1745875540103,"user_tz":240,"elapsed":471,"user":{"displayName":"Max Drogin","userId":"14072875463726990849"}},"outputId":"c9638fc4-a528-47f3-ae3d-5b4a402b5e9d"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["['Opponent DRB', 'Team FG%', 'Opponent FG', 'Team DRB', 'Opponent BLK']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model Team Win Prob [0.22781423 0.97862035 0.51314941 0.9837867 ]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.22781423, 0.97862035, 0.51314941, 0.9837867 ])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":[],"metadata":{"id":"GNAidXpuPEHf"},"execution_count":null,"outputs":[]}]}